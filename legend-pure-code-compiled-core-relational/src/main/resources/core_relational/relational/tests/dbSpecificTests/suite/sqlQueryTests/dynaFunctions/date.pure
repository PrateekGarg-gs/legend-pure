import meta::relational::metamodel::*;
import meta::relational::dbTestRunner::*;

// function <<dbTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::today::testToday(config:DbTestConfig[1]):String[0..1]
// {
//   let dynaFunc = ^DynaFunction(name='today', parameters=[]);
//   let expected = ^Literal(value=1);
//   runDynaFunctionDatabaseTest($dynaFunc, $expected, $config);
// }

function <<dbTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::adjust::testAdjust(config:DbTestConfig[1]):String[0..1]
{
  let dynaFunc = ^DynaFunction(name='adjust', parameters=[^Literal(value=%2014-11-30), ^Literal(value=1), ^Literal(value=DurationUnit.DAYS)]);
  let expected = ^Literal(value=%2014-12-01);
  runDynaFunctionDatabaseTest($dynaFunc, $expected, $config);
}

function <<dbTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::adjust::testAdjustWithMicroseconds(config:DbTestConfig[1]):String[0..1]
{
  let dynaFunc = ^DynaFunction(name='adjust', parameters=[^Literal(value=%2014-12-04T15:22:23), ^Literal(value=123456), ^Literal(value=DurationUnit.MICROSECONDS)]);
  let expected = ^Literal(value=%2014-12-04T15:22:23.123456000);
  runDynaFunctionDatabaseTest($dynaFunc, $expected, $config);
}

function <<dbTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::firstDay::testFirstDayOfWeek(config:DbTestConfig[1]):String[0..1]
{
  let dynaFunc = ^DynaFunction(name='firstDayOfWeek', parameters=[^Literal(value=%2014-12-04T15:22:23)]);
  let expected = ^Literal(value=%2014-12-01);
  runDynaFunctionDatabaseTest($dynaFunc, $expected, $config);
}

function <<dbTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::firstDay::testFirstDayOfMonth(config:DbTestConfig[1]):String[0..1]
{
  let dynaFunc = ^DynaFunction(name='firstDayOfMonth', parameters=[^Literal(value=%2014-12-04T15:22:23)]);
  let expected = ^Literal(value=%2014-12-01);
  runDynaFunctionDatabaseTest($dynaFunc, $expected, $config);
}

function <<dbTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::firstDay::testFirstDayOfQuarter(config:DbTestConfig[1]):String[0..1]
{
  let dynaFunc = ^DynaFunction(name='firstDayOfQuarter', parameters=[^Literal(value=%2014-12-04T15:22:23)]);
  let expected = ^Literal(value=%2014-10-01);
  runDynaFunctionDatabaseTest($dynaFunc, $expected, $config);
}

function <<dbTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::firstDay::testFirstDayOfYear(config:DbTestConfig[1]):String[0..1]
{
  let dynaFunc = ^DynaFunction(name='firstDayOfYear', parameters=[^Literal(value=%2014-12-04T15:22:23)]);
  let expected = ^Literal(value=%2014-01-01);
  runDynaFunctionDatabaseTest($dynaFunc, $expected, $config);
}

// function <<dbTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::firstDay::testFirstDayOfThisMonth(config:DbTestConfig[1]):String[0..1]
// {
//   let dynaFunc = ^DynaFunction(name='firstDayOfThisMonth', parameters=[]);
//   let expected = ^Literal(value=%2022-02-01);
//   runDynaFunctionDatabaseTest($dynaFunc, $expected, $config);
// }

// function <<dbTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::firstDay::testFirstDayOfThisQuarter(config:DbTestConfig[1]):String[0..1]
// {
//   let dynaFunc = ^DynaFunction(name='firstDayOfThisQuarter', parameters=[]);
//   let expected = ^Literal(value=%2022-01-01);
//   runDynaFunctionDatabaseTest($dynaFunc, $expected, $config);
// }

// function <<dbTest.Test>> meta::relational::tests::dbSpecificTests::sqlQueryTests::dynaFunctions::firstDay::testFirstDayOfThisYear(config:DbTestConfig[1]):String[0..1]
// {
//   let dynaFunc = ^DynaFunction(name='firstDayOfThisYear', parameters=[]);
//   let expected = ^Literal(value=%2022-01-01);
//   runDynaFunctionDatabaseTest($dynaFunc, $expected, $config);
// }